-- Create the table 'call_data' with the specified columns
CREATE OR REPLACE TABLE call_data (
    call_date TIMESTAMP,               -- Date and time of the call
    call_type STRING,                  -- Type of the call (e.g., Technical, Support)
    software_version STRING,           -- Software version used during the call
    caller_employee_id STRING,         -- ID of the caller (employee)
    agent_id STRING,                   -- ID of the agent handling the call
    resolved BOOLEAN,                  -- Call resolved status (TRUE if resolved, FALSE if not)
    escalated_to_tier2 BOOLEAN,        -- Whether the call was escalated to Tier 2 support (TRUE/FALSE)
    repeat_caller BOOLEAN,             -- Whether the caller is a repeat caller (TRUE/FALSE)
    category STRING,                   -- Category of the call (e.g., Software, Hardware)
    subcategory STRING,                -- Subcategory of the call (e.g., Installation, Replacement)
    caller_notes STRING,               -- Notes taken during the call
    servicenow_incident_record STRING  -- ServiceNow incident record associated with the call
);

-- Insert sample data into the 'call_data' table
INSERT INTO call_data (call_date, call_type, software_version, caller_employee_id, agent_id, resolved, escalated_to_tier2, repeat_caller, category, subcategory, caller_notes, servicenow_incident_record)
VALUES 
    ('2024-05-26 09:15:00', 'Technical', '1.0.0', 'E12345', 'A67890', TRUE, FALSE, FALSE, 'Software', 'Installation', 'Caller reported installation issues', 'INC000001'),
    ('2024-05-26 10:30:00', 'Support', '1.2.3', 'E54321', 'A09876', FALSE, TRUE, TRUE, 'Hardware', 'Replacement', 'Caller requested hardware replacement', 'INC000002');

-- Create the table 'caller_info' with additional caller information
CREATE OR REPLACE TABLE caller_info (
    caller_employee_id STRING,            -- ID of the caller (employee)
    alphanumeric_employee_id STRING,      -- Alphanumeric ID of the caller
    department STRING,                    -- Department of the caller
    job_code STRING,                      -- Job code of the caller
    active_status BOOLEAN,                -- Active or inactive status of the caller (TRUE/FALSE)
    l1_manager STRING,                    -- L1 manager
    l2_manager STRING,                    -- L2 manager
    l3_manager STRING,                    -- L3 manager
    l4_manager STRING,                    -- L4 manager
    l5_manager STRING,                    -- L5 manager
    executive_representative STRING,      -- Executive representative
    l1_manager_email STRING,              -- L1 manager email
    l2_manager_email STRING,              -- L2 manager email
    employee_email STRING,                -- Employee email
    tenure INT,                           -- Tenure of the employee
    salary DECIMAL                        -- Salary of the employee
);

-- Insert sample data into the 'caller_info' table
INSERT INTO caller_info (
    caller_employee_id, alphanumeric_employee_id, department, job_code, active_status, l1_manager, l2_manager, l3_manager, l4_manager, l5_manager, executive_representative, l1_manager_email, l2_manager_email, employee_email, tenure, salary
) VALUES 
    ('E12345', 'EMP001', 'IT', 'DEV', TRUE, 'Manager1', 'Manager2', 'Manager3', 'Manager4', 'Manager5', 'Exec1', 'manager1@example.com', 'manager2@example.com', 'employee1@example.com', 5, 75000),
    ('E54321', 'EMP002', 'HR', 'HR01', FALSE, 'ManagerA', 'ManagerB', 'ManagerC', 'ManagerD', 'ManagerE', 'Exec2', 'managerA@example.com', 'managerB@example.com', 'employee2@example.com', 3, 60000);

-- Select data from 'call_data' and join with 'caller_info' to include additional caller details
SELECT 
    cd.call_date, 
    cd.call_type, 
    cd.software_version, 
    cd.caller_employee_id, 
    cd.agent_id, 
    cd.resolved, 
    cd.escalated_to_tier2, 
    cd.repeat_caller, 
    cd.category, 
    cd.subcategory, 
    cd.caller_notes, 
    cd.servicenow_incident_record,
    ci.alphanumeric_employee_id, 
    ci.department, 
    ci.job_code, 
    ci.active_status, 
    ci.l1_manager, 
    ci.l2_manager, 
    ci.l3_manager, 
    ci.l4_manager, 
    ci.l5_manager, 
    ci.executive_representative, 
    ci.l1_manager_email, 
    ci.l2_manager_email, 
    ci.employee_email, 
    ci.tenure, 
    ci.salary
FROM 
    call_data cd
LEFT JOIN 
    caller_info ci
ON 
    cd.caller_employee_id = ci.caller_employee_id
WHERE 
    cd.call_date BETWEEN '2024-05-01' AND '2024-05-31'  -- Filter calls within May 2024
    AND cd.resolved = TRUE                              -- Only include calls that are resolved
    AND cd.escalated_to_tier2 = FALSE;                  -- Only include calls that were not escalated to Tier 2 support
